import sys
sys.setrecursionlimit(10**5)
input = sys.stdin.readline

def dfs(elem,select):
    if visit[elem]:
        return
    elemA = elem
    visit[elemA] = True

    for i in range(len(graph[elem])):
        elemB = graph[elem][i]
        if visit[elemB]:
            continue
        
        if select == 'A':
            setA.add(elemA)
            setB.add(elemB)
            dfs(elemB, 'B')
        else:
            setA.add(elemB)
            setB.add(elemA)
            dfs(elemB, 'A')
            

t = int(input())
while t:
    t-=1
    v, e = map(int,input().split())
    # index로 넣을 것
    setA = set()
    setB = set()
    visit = [False] * v
    graph = [[] for _ in range(v)]
    
    for _ in range(e):
        a , b = map(int,input().split())
        graph[a-1].append(b-1) 
        graph[b-1].append(a-1)

    for i in range(v):
        if not visit[i]:
            dfs(i,'A')

    for row in range(v):
        flag = False
        for elem in graph[row]:
            if row in setA and elem in setA or row in setB and elem in setB:
                print("NO")
                flag = True
                break
        if flag:
            break
        elif row == v-1:
            print("YES")